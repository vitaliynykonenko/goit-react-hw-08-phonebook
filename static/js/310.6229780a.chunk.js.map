{"version":3,"file":"static/js/310.6229780a.chunk.js","mappings":"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","sources":["components/Phonebook/ContactForm/ContactForm.styled.jsx","redux/selectors.js","components/Phonebook/ContactForm/ContactForm.jsx","components/Phonebook/ContactList/ContactList.styled.jsx","components/Phonebook/ContactList/ContactList.jsx","components/Phonebook/container.jsx","components/Phonebook/Filter/Filter.styled.jsx","components/Phonebook/Filter/Filter.jsx","components/Phonebook/Loader/Loader.style.jsx","components/Phonebook/Loader/Loader.jsx","pages/contacts/contacts.styled.jsx","pages/contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\npadding: 20px;\n  max-width: 480px;\n`\nexport const Input = styled.input`\nwidth: 100%;\npadding: 12px 20px;\nmargin: 8px 0;\ndisplay: inline-block;\nborder: 1px solid #ccc;\nborder-radius: 4px;\nbox-sizing: border-box;\ntransition: background-color 0.5s ease-in-out;\n:focus {\n    background-color: #e4ffe6;\n`\nexport const Button = styled.button`\nwidth: 100%;\nbackground-color: darkviolet;\ncolor: black;\nfont-size: 16px;\npadding: 8px 0px;\nmargin: 8px 0;\nborder: none;\nborder-radius: 4px;\ncursor: pointer;\ntransition: background-color ease-in-out 300ms;\n:hover,\n:focus {\n  background-color: violet;\n`","export const getFilter = state => state.filter;\nexport const getContacts = state => state.contacts.items;\nexport const getLoading = state => state.contacts.isLoading;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Input, Button } from './ContactForm.styled';\nimport { useState } from 'react';\nimport { getContacts } from 'redux/selectors';\nimport { notifyContactsRejected } from 'components/services';\nimport { addContact } from 'redux/operations';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setPhoneNumber] = useState('');\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    name === 'name' ? setName(value) : setPhoneNumber(value);\n  };\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const contact = {\n      name,\n      number,\n    };\n    if (\n      contacts.some(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      notifyContactsRejected(name);\n    } else {\n      dispatch(addContact(contact));\n    }\n    setName('');\n    setPhoneNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <p>Name</p>\n      <Input\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        value={name}\n        onChange={handleChange}\n        required\n      />\n      <p>Number</p>\n      <Input\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        value={number}\n        onChange={handleChange}\n        required\n      />\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\nexport const List = styled.ul`\npadding: 20px 20px;\nmax-width: 480px;\n`\nexport const Item = styled.ul`\npadding: 5px;\ndisplay: flex;\nborder-bottom: 1px solid #999;\n`\nexport const Text = styled.span`\nmargin-right: auto;\nline-height: 34px;\n`\nexport const Button = styled.button`\nwidth: 100px;\nheight: 32px;\ncolor: black;\nbackground-color: darkviolet;\nfont-size: 16px;\nborder: none;\nborder-radius: 4px;\ncursor: pointer;\ntransition: background-color ease-in-out 300ms;\n:hover {\n    background-color: violet;\n}\n`\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/operations';\nimport { getContacts, getFilter } from 'redux/selectors';\n\nimport { List, Item, Text, Button } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const deleteSelectedContact = contactID => dispatch(deleteContact(contactID));\n  const visibleContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n  return (\n    <List>\n      {visibleContacts.map(contact => (\n        <Item key={contact.id}>\n          <Text>\n          {contact.name}: {contact.number}\n          </Text>\n          <Button\n            type=\"button\"\n            onClick={() => deleteSelectedContact(contact.id)}\n          >\n            Delete\n          </Button>\n        </Item>\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\nexport const Container = styled.div`\n  border: 1px solid darkviolet;\n  width: 520px;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  background-color: #f2f2f2;\n  border-radius: 15px;\n  margin: 0 auto;\n  height: auto;\n  text-align: center;\n  margin-top: 15px;\n  padding: 5px;\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\npadding: 20px;\nmax-width: 480px;\n`\nexport const Input = styled.input`\nwidth: 100%;\npadding: 12px 20px;\nmargin: 8px 0;\ndisplay: inline-block;\nborder: 1px solid #ccc;\nborder-radius: 4px;\nbox-sizing: border-box;\ntransition: background-color 0.5s ease-in-out;\n:focus {\n    background-color: #e4ffe6;\n}\n`\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { onFilter } from 'redux/filterSlice';\nimport { getFilter } from 'redux/selectors';\nimport { Container, Input } from './Filter.styled';\n\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const handleFilter = e => {\n    dispatch(onFilter(e.currentTarget.value));\n  };\n  return (\n    <Container>\n      <label>\n      Find contact by name\n             \n          <Input\n            type=\"text\"\n            name=\"filter\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Find contacts by name\"\n            placeholder=\"Enter search request here\"\n            value={filter}\n            onChange={handleFilter}\n          />\n        </label>\n      </Container>\n   \n  );\n};\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Test = styled.div`\n  display: flex;\n  justify-content: space-around;\n`;\n","import React from 'react';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { Test } from './Loader.style';\n\nexport const Loader = () => {\n  return (\n    <Test>\n      <ThreeDots type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />\n    </Test>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\ndisplay: block;\nmin-width: 420px;\nmax-width: 500px;\nmargin: 0 auto;\nmargin-top: 20px;\npadding: 20px;\nbackground-color: #f2f2f2;\nborder-radius: 5px;\n`\nexport const H1 = styled.h1`\ntext-align: center;\n  text-transform: uppercase;\n`\nexport const H2 = styled.h2`\ntext-align: center;\n  text-transform: uppercase;\n`\n","import { ContactForm } from 'components/Phonebook/ContactForm/ContactForm';\nimport { ContactList } from 'components/Phonebook/ContactList/ContactList';\nimport { Container } from 'components/Phonebook/container';\nimport Filter from 'components/Phonebook/Filter/Filter';\nimport { Loader } from 'components/Phonebook/Loader/Loader';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\nimport { fetchContacts } from 'redux/operations';\nimport { getContacts, getLoading } from 'redux/selectors';\nimport { Section, H1, H2 } from './contacts.styled';\n\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  const contacts = useSelector(getContacts);\n  const isLoading = useSelector(getLoading);\n\n  return (\n    <>\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={2000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        theme=\"light\"\n      />\n      <Container>\n      <Section>\n        <H1>Phonebook</H1>\n        <ContactForm />\n        <H2>Contacts</H2>\n        {isLoading && <Loader />}\n        {contacts.length > 1 && <Filter />}\n        {contacts.length > 0 ? (\n          <ContactList />\n        ) : (\n          <p\n            style={{\n              marginBottom: '25px',\n              lineHeight: '1.15',\n            }}\n          >\n            You have no contacts saved\n          </p>\n        )}\n        </Section>\n      </Container>\n    </>\n  );\n};\nexport default ContactsPage;\n"],"names":["Form","styled","Input","Button","getFilter","state","filter","getContacts","contacts","items","getLoading","isLoading","ContactForm","useState","name","setName","number","setPhoneNumber","handleChange","e","currentTarget","value","useSelector","dispatch","useDispatch","onSubmit","preventDefault","contact","some","toLowerCase","notifyContactsRejected","addContact","type","pattern","title","onChange","required","List","Item","Text","ContactList","visibleContacts","includes","map","onClick","contactID","id","deleteContact","Container","placeholder","onFilter","Test","Loader","color","height","width","Section","H1","H2","useEffect","fetchContacts","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","length","style","marginBottom","lineHeight"],"sourceRoot":""}